package de.betacoding.mysql.dao;

import org.jetbrains.annotations.NotNull;

import java.util.List;
import java.util.Optional;

/**
 * Generic DAO interface defining standard CRUD operations.
 *
 * @param <T>  the type of the entity
 * @param <ID> the type of the entity's identifier
 */
public interface GenericDao<T, ID> {

    /**
     * Finds an entity by its identifier.
     *
     * @param id the identifier
     * @return an {@link Optional} containing the found entity or empty if not found
     */
    @NotNull
    Optional<T> findById(@NotNull ID id);

    /**
     * Retrieves all entities of type T.
     *
     * @return a list of all entities
     */
    @NotNull
    List<T> findAll();

    /**
     * Saves a new entity to the database.
     *
     * @param entity the entity to save
     * @return the saved entity with any autogenerated fields populated
     */
    @NotNull
    T save(@NotNull T entity);

    /**
     * Updates an existing entity in the database.
     *
     * @param entity the entity to update
     */
    void update(@NotNull T entity);

    /**
     * Deletes an entity by its identifier.
     *
     * @param id the identifier of the entity to delete
     */
    void deleteById(@NotNull ID id);
}